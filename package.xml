<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.10.16" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>Judy</name>
 <channel>pecl.php.net</channel>
 <summary>PHP Judy implements sparse dynamic arrays (aka Judy Arrays)</summary>
 <description>PHP Judy implements sparse dynamic arrays (aka Judy Arrays). This extension is based
    on the Judy C library. A Judy array consumes memory only when it is populated,
    yet can grow to take advantage of all available memory if desired. Judy&apos;s key benefits
    are scalability, high performance, and memory efficiency.</description>
 <lead>
  <name>Nicolas Brousse</name>
  <user>nicolas</user>
  <email>nicolas@brousse.info</email>
  <active>yes</active>
 </lead>
 <date>2025-08-25</date>
 <version>
  <release>2.2.0</release>
  <api>2.2.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP</license>
 <notes>
- **BREAKING CHANGE**: Renamed Judy::next() to Judy::searchNext() to resolve Iterator interface conflicts
- **NEW FEATURE**: Implemented proper Iterator interface support (rewind, valid, current, key, next methods)
- **NEW FEATURE**: Added support for SPL iterators (LimitIterator, FilterIterator, etc.)
- **IMPROVEMENT**: Enhanced benchmark examples with accurate memory measurements
- **IMPROVEMENT**: Updated BENCHMARK.md with comprehensive design explanations and performance analysis
- **IMPROVEMENT**: Added comprehensive benchmark suite with statistical analysis
- **IMPROVEMENT**: Fixed iterator performance analysis and methodology
- **FIX**: All tests now pass (100% success rate)
- **FIX**: Improved memory measurement reliability across different environments
- **FIX**: Fixed critical iterator bugs (next, rewind, valid methods)
- **DOCUMENTATION**: Added O(log n) vs O(1) complexity explanations
- **DOCUMENTATION**: Enhanced benchmark methodology with environment details
 </notes>
 <contents>
  <dir name="/">
   <dir name="examples">
    <file role="doc" name="judy-bench-bitset.php"/>
    <file role="doc" name="judy-bench-int_to_int.php"/>
    <file role="doc" name="judy-bench-string_to_int.php"/>
    <file role="doc" name="judy.php"/>
    <file role="doc" name="run-benchmarks.php"/>
    <file role="doc" name="judy-bench-realistic-php-array.php"/>
    <file role="doc" name="judy-bench-realistic-judy.php"/>
    <file role="doc" name="benchmark_ordered_data.php"/>
    <file role="doc" name="benchmark_range_queries.php"/>
    <file role="doc" name="benchmark_real_world_patterns.php"/>
    <file role="doc" name="run_comprehensive_benchmarks.php"/>
    <file role="doc" name="debug_iterator_performance.php"/>
    <file role="doc" name="iterator-vs-sequential-test.php"/>
    <file role="doc" name="judy-read-performance-test.php"/>
    <file role="doc" name="run-benchmarks-robust.php"/>
    <file role="doc" name="iterator_performance_analysis.md"/>
   </dir>
   <dir name="tests">
    <file role="test" name="001.phpt"/>
    <file role="test" name="bitset_001.phpt"/>
    <file role="test" name="bitset_002.phpt"/>
    <file role="test" name="bitset_003.phpt"/>
    <file role="test" name="bitset_004.phpt"/>
    <file role="test" name="bitset_005.phpt"/>
    <file role="test" name="bitset_006.phpt"/>
    <file role="test" name="bitset_007.phpt"/>
    <file role="test" name="int_to_int_001.phpt"/>
    <file role="test" name="int_to_int_002.phpt"/>
    <file role="test" name="int_to_int_003.phpt"/>
    <file role="test" name="int_to_int_004.phpt"/>
    <file role="test" name="int_to_int_005.phpt"/>
    <file role="test" name="int_to_int_006.phpt"/>
    <file role="test" name="int_to_int_007.phpt"/>
    <file role="test" name="int_to_int_008.phpt"/>
    <file role="test" name="int_to_mixed_001.phpt"/>
    <file role="test" name="int_to_mixed_002.phpt"/>
    <file role="test" name="int_to_mixed_003.phpt"/>
    <file role="test" name="int_to_mixed_004.phpt"/>
    <file role="test" name="int_to_mixed_005.phpt"/>
    <file role="test" name="int_to_mixed_006.phpt"/>
    <file role="test" name="int_to_mixed_007.phpt"/>
    <file role="test" name="judy_error.phpt"/>
    <file role="test" name="judy_foreach_bitset.phpt"/>
    <file role="test" name="judy_foreach_int_to_int.phpt"/>
    <file role="test" name="judy_foreach_int_to_mixed.phpt"/>
    <file role="test" name="judy_foreach_string_to_int.phpt"/>
    <file role="test" name="judy_foreach_string_to_mixed.phpt"/>
    <file role="test" name="judy_type.phpt"/>
    <file role="test" name="string_to_int_001.phpt"/>
    <file role="test" name="string_to_int_002.phpt"/>
    <file role="test" name="string_to_int_003.phpt"/>
    <file role="test" name="string_to_int_004.phpt"/>
    <file role="test" name="string_to_mixed_001.phpt"/>
    <file role="test" name="string_to_mixed_002.phpt"/>
    <file role="test" name="string_to_mixed_003.phpt"/>
    <file role="test" name="string_to_mixed_004.phpt"/>
    <file role="test" name="iterator_interface_001.phpt"/>
    <file role="test" name="iterator_methods_simple_001.phpt"/>
    <file role="test" name="iterator_methods_individual_001.phpt"/>
    <file role="test" name="iterator_next_bug_fix_001.phpt"/>
    <file role="test" name="iterator_segfault_fix_001.phpt"/>
    <file role="test" name="iterator_rewind_bug_fix_001.phpt"/>
    <file role="test" name="iterator_next_invalid_behavior_001.phpt"/>
    <file role="test" name="iterator_rewind_empty_bitset_001.phpt"/>
    <file role="test" name="iterator_valid_performance_001.phpt"/>
    <file role="test" name="foreach_iterator_int_to_int_001.phpt"/>
    <file role="test" name="foreach_iterator_int_to_mixed_001.phpt"/>
    <file role="test" name="multiple_instances_count_int_to_int_001.phpt"/>
    <file role="test" name="multiple_instances_count_string_to_mixed_001.phpt"/>
    <file role="test" name="count_method_loop_int_to_int_001.phpt"/>
    <file role="test" name="count_method_loop_string_to_mixed_001.phpt"/>
    <file role="test" name="foreach_negative_indices_int_to_int_001.phpt"/>
    <file role="test" name="foreach_with_vardump_int_to_int_001.phpt"/>
    <file role="test" name="strings_as_keys.phpt"/>
    <file role="test" name="strings_as_values.phpt"/>
   </dir>
   <file role="src" name="config.m4"/>
   <file role="src" name="config.w32"/>
   <file role="src" name="judy_arrayaccess.c"/>
   <file role="src" name="judy_arrayaccess.h"/>
   <file role="src" name="judy_handlers.c"/>
   <file role="src" name="judy_handlers.h"/>
   <file role="src" name="judy_iterator.c"/>
   <file role="src" name="judy_iterator.h"/>
   <file role="src" name="php_judy.c"/>
   <file role="src" name="php_judy.h"/>
   <file role="doc" name="LICENSE" />
   <file role="doc" name="README.md" />
   <file role="doc" name="CREDITS" />
   <file role="doc" name="BENCHMARK.md" />
   <file role="doc" name="MIGRATION_2.2.0.md" />
   <file role="doc" name="Dockerfile" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>8.0.0</min>
   </php>
   <pearinstaller>
    <min>1.4.8</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>Judy</providesextension>
 <extsrcrelease>
  <configureoption default="autodetect" name="with-judy" prompt="Please provide the prefix of libJudy installation" />
 </extsrcrelease>
 <changelog>
  <release>
   <date>2025-08-25</date>
   <version>
    <release>2.2.0</release>
    <api>2.2.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <notes>
- **BREAKING CHANGE**: Renamed Judy::next() to Judy::searchNext() to resolve Iterator interface conflicts
- **NEW FEATURE**: Implemented proper Iterator interface support (rewind, valid, current, key, next methods)
- **NEW FEATURE**: Added support for SPL iterators (LimitIterator, FilterIterator, etc.)
- **IMPROVEMENT**: Enhanced benchmark examples with accurate memory measurements
- **IMPROVEMENT**: Updated BENCHMARK.md with comprehensive design explanations and performance analysis
- **IMPROVEMENT**: Added comprehensive benchmark suite with statistical analysis
- **IMPROVEMENT**: Fixed iterator performance analysis and methodology
- **FIX**: All tests now pass (100% success rate)
- **FIX**: Improved memory measurement reliability across different environments
- **FIX**: Fixed critical iterator bugs (next, rewind, valid methods)
- **DOCUMENTATION**: Added O(log n) vs O(1) complexity explanations
- **DOCUMENTATION**: Enhanced benchmark methodology with environment details
   </notes>
  </release>
  <release>
   <date>2025-08-25</date>
   <version>
    <release>2.1.0</release>
    <api>2.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <notes>
- Performance improvements for string-keyed arrays through strict key typing (Breaking Change).
- Modernized zval handling for better performance and PHP 8+ compatibility.
- Fixed test suite to accomodate for strict key typing.
   </notes>
  </release>
  <release>
   <date>2025-08-24</date>
   <version>
    <release>2.0.0</release>
    <api>2.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <notes>
- Added compatibility for PHP 8.0 and newer.
- Dropped support for PHP versions older than 8.0 (Breaking Change).
- Added a comprehensive benchmark suite (`examples/run-benchmarks.php`) to test realistic workloads.
- Added a `BENCHMARK.md` file with detailed performance results and recommendations.
- Added a `Dockerfile` to provide a consistent development and testing environment.
- Updated `README.md` with modern installation instructions and a link to the benchmark results.
   </notes>
  </release>
  <release>
   <date>2013-11-03</date>
   <version>
    <release>1.0.2</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <notes>
- Bug fix with count/size, see https://github.com/orieg/php-judy/issues/15
- Add missing test files in package.xml
   </notes>
  </release>
  <release>
   <date>2013-10-20</date>
   <version>
    <release>1.0.1</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <notes>
- Fixes for Windows DDL creation
- Support for PHP 5.5
- Add support for Travis CI
- Update minimum PHP version to 5.3
   </notes>
  </release>
  <release>
   <date>2013-05-28</date>
    <version>
     <release>1.0.0</release>
     <api>1.0.0</api>
    </version>
    <stability>
     <release>stable</release>
     <api>stable</api>
    </stability>
    <notes>
- First stable release based on 0.1.6 beta
    </notes>
  </release>
  <release>
   <date>2013-03-31</date>
    <version>
     <release>0.1.6</release>
     <api>0.1.1</api>
    </version>
    <stability>
     <release>beta</release>
     <api>beta</api>
    </stability>
    <notes>
- Performance improvement from GitHub pull request #10
- Add countable spl interface from GitHub pull request #9
    </notes>
  </release>
  <release>
   <date>2013-03-20</date>
   <version>
    <release>0.1.5</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <notes>
- Multiple bug fixes and improvement from GitHub pull request #8
   </notes>
  </release>
  <release>
   <date>2012-10-14</date>
   <version>
    <release>0.1.4</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <notes>
- Bug fix foreach with usigned/signed int, see https://github.com/orieg/php-judy/issues/3
- Bug fix segfault with iterator, see https://github.com/orieg/php-judy/issues/2
- Add new test case + fix some ZVAL refcount
   </notes>
  </release>
  <release>
   <date>2012-05-30</date>
   <version>
    <release>0.1.3</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <notes>
- Add PHP 5.4 support
- Bug fix count() for STRING_TO_MIXED type, cf. https://github.com/orieg/php-judy/issues/1
   </notes>
  </release>
  <release>
   <date>2010-09-24</date>
   <version>
    <release>0.1.2</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <notes>
- Update examples php code
- Fix Mac OS X support
- Fix infinite loop with foreach() on Windows
   </notes>
  </release>
  <release>
   <date>2010-09-22</date>
   <version>
    <release>0.1.1</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <notes>
- Implement array access and iterator to provide access to judy objects as arrays
- Add a judy_type() function and Judy::getType() method
- Remove unused methods, refactor and clean-up some code
- Proper Windows support
   </notes>
  </release>
  <release>
   <date>2010-09-17</date>
   <version>
    <release>0.0.1</release>
    <api>0.0.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <notes>
- Initial PECL release
   </notes>
   <dependencies>
    <required>
     <php>
      <min>5.3.3</min>
     </php>
     <pearinstaller>
      <min>1.4.0</min>
     </pearinstaller>
    </required>
   </dependencies>
  </release>
 </changelog>
</package>
