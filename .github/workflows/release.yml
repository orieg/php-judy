name: Publish Windows Releases

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  get-extension-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.extension-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get the extension matrix
        id: extension-matrix
        uses: php/php-windows-builder/extension-matrix@v1

  build:
    needs: get-extension-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJson(needs.get-extension-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create extension package structure
        run: |
          # Create the directory structure expected by PHP Windows Builder
          $packageDir = "test-package\judy-2.2.0"
          New-Item -ItemType Directory -Path $packageDir -Force
          
          # Copy all source files
          Copy-Item -Path "*.c" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "*.h" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "*.m4" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "*.xml" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "*.md" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "LICENSE" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "CREDITS" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "Dockerfile" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "configure.ac" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          Copy-Item -Path "composer.json" -Destination $packageDir -Force -ErrorAction SilentlyContinue
          
          # Copy directories
          if (Test-Path "examples") {
            Copy-Item -Path "examples" -Destination $packageDir -Recurse -Force
          }
          if (Test-Path "tests") {
            Copy-Item -Path "tests" -Destination $packageDir -Recurse -Force
          }
          if (Test-Path "lib") {
            Copy-Item -Path "lib" -Destination $packageDir -Recurse -Force
          }
          if (Test-Path "include") {
            Copy-Item -Path "include" -Destination $packageDir -Recurse -Force
          }
          if (Test-Path "build") {
            Copy-Item -Path "build" -Destination $packageDir -Recurse -Force
          }
          
          Write-Host "Extension package directory created: $packageDir"
          Write-Host "Directory contents:"
          Get-ChildItem -Path $packageDir -Recurse | Select-Object Name, FullName
      
      - name: Debug directory structure
        run: |
          echo "Current directory: $PWD"
          echo "test-package directory contents:"
          if (Test-Path "test-package") {
            Get-ChildItem -Path "test-package" -Recurse | Select-Object Name, FullName
          } else {
            Write-Host "test-package directory does not exist"
          }
          
      - name: Build the extension
        uses: php/php-windows-builder/extension@v1
        with:
          php-version: ${{ matrix.php-version }}
          arch: ${{ matrix.arch }}
          ts: ${{ matrix.ts }}
          args: --with-judy=shared
          libs: judy

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Upload artifact to the release
        uses: php/php-windows-builder/release@v1
        with:
          release: ${{ github.event.release.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
