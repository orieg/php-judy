name: Windows Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        arch: ['x64']
        ts: ['nts']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        architecture: ${{ matrix.arch }}
        threadsafe: ${{ matrix.ts == 'ts' }}

    - name: Create extension directory structure
      run: |
        # Create the directory structure expected by PHP Windows Builder
        $extensionDir = "test-package\judy-2.2.0"
        New-Item -ItemType Directory -Path $extensionDir -Force
        
        # Copy all source files
        Copy-Item -Path "*.c" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "*.h" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "*.m4" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "*.xml" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "*.md" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "LICENSE" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "CREDITS" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "Dockerfile" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "configure.ac" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        Copy-Item -Path "composer.json" -Destination $extensionDir -Force -ErrorAction SilentlyContinue
        
        # Copy directories
        if (Test-Path "examples") {
          Copy-Item -Path "examples" -Destination $extensionDir -Recurse -Force
        }
        if (Test-Path "tests") {
          Copy-Item -Path "tests" -Destination $extensionDir -Recurse -Force
        }
        if (Test-Path "lib") {
          Copy-Item -Path "lib" -Destination $extensionDir -Recurse -Force
        }
        if (Test-Path "include") {
          Copy-Item -Path "include" -Destination $extensionDir -Recurse -Force
        }
        if (Test-Path "build") {
          Copy-Item -Path "build" -Destination $extensionDir -Recurse -Force
        }
        
        Write-Host "Extension directory created: $extensionDir"
        Write-Host "Directory contents:"
        Get-ChildItem -Path $extensionDir -Recurse | Select-Object Name, FullName

    - name: Debug directory structure
      run: |
        echo "Current directory: $PWD"
        echo "test-package directory contents:"
        if (Test-Path "test-package") {
          Get-ChildItem -Path "test-package" -Recurse | Select-Object Name, FullName
        } else {
          Write-Host "test-package directory does not exist"
        }

    - name: Build the extension
      uses: php/php-windows-builder/extension@v1
      with:
        php-version: ${{ matrix.php-version }}
        arch: ${{ matrix.arch }}
        ts: ${{ matrix.ts }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: judy-windows-${{ matrix.php-version }}-${{ matrix.arch }}-${{ matrix.ts }}
        path: |
          modules/judy.dll
          build/
        retention-days: 30

    - name: Upload to release
      if: github.event_name == 'release'
      uses: php/php-windows-builder/release@v1
      with:
        release: ${{ github.event.release.tag_name }}
        token: ${{ secrets.GITHUB_TOKEN }}
